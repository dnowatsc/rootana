; sources of uncertainty:
; a) statistical uncertainty of the 'folded' data
; b) MC statistical uncertainties of the backgrounds that are subtracted
; c) systematic uncertainties of the subtracted backgrounds
; d) MC statistical uncertainties of the response matrix
; e) systematic uncertainties of the response matrix
;
; a, b, and c are handled outside of the actual unfolding algorithm by constructing a "signal-only" histogram
; (with correlated uncertainties) as input to the unfolding method itself. So the "core" of the unfolding method
; does not know about backgrounds or any correlation.
; d and e are treated by repeating the whole unfolding procedure using a different response matrix each time
; (a statistical ensemble for d and some alternative response matrices for e)


; unfolding_problem describes the unfolding problem, including the backgrounds (if any)
problem {
  prefix model1/
  
  ; the response matrix with x=reco, y=gen; includes MC statistical uncertainties
  ; response response
  ; response-transpose true ; in case x,y are switched
  
  ; gen gen ; name of the gen histo
  
  ; bkg bkg ; name of the background histo
  ; bkg-cov bkg-cov ; bkg-cov
  ; bkg-use-uncertainties true ; default is false
}

; NOTE (TODO): alternative 'problem' description by only giving the path in the input root file (empty string is allowed) in which
; standard histogram names are searched (e.g. "response", "gen", "bkg", "bkg_cov").

options {
  infile in.root
  outfile out.root
}

unfolder {
   ; type BinByBin
   type TUnfolder
   ; type RegUnfolder
   ; tau-scanmethod disable
   ; tau 1.0
}

; Modules to run, in this order. The modules write their result(s) in the output root file in a
; directory of the name given here.
modules {
   ; run the unfolding on some reco-level histogram
   ;unfold {
   ;   type unfold
   ;   hname data
   ;}
   
   input {
      type write_input
   }
   
   asimov_toy {
      type toys
      n 1
      dice-stat false
      dice-bkgsyst false
   }
   
   toy_histos {
      type toys
      n 10
      all-hists true ; save all intermediate histograms; only use with small n!
   }
   
   nominal_toys {
      type toys
   }
   
   reweighted {
      type unfold_reweighted
      linear {
         type genlinear
         ; reweight by 1.0 to 1.2
         slope 0.2
         norm-factor 1.0
      }
      scaled {
         type genlinear
         ; just scale up overall spectrum by factor 1.2:
         norm-factor 1.2
      }
      rel2 {
         type genlinear
         ; reweight by 0sigma to +2sigma:
         offset 0.0
         slope 2.0
         weight-mode relative
      }
      relm2 {
         type genlinear
         ; reweight by +2sigma to 0sigma:
         offset 2.0
         slope -2.0
         weight-mode relative
      }
   }

   lin {
      type lin_unfolding
   }
   
   ; toys varying the unfolding matrix within its MC statistical uncertainties each time.
   ;rtoys {
   ;   type rtoys
   ;   n 1000
   ;}
}

